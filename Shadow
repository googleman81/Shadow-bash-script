# ========================================================
# üöÄ Shadow ‚Äì Unified Core Script
# Purpose: Runs Shinobi 2.1, Shinobi 2.4, Watcheye (integrated),
# Airtouch, and manages Speed2/Speed1 settings in a single command.
# Logging removed for disk space hygiene.
# ========================================================

# ==========
# üåê Initial Sysctl Tweaks
# ==========
sudo sysctl -w net.inet.udp.recvspace=131072
sudo sysctl -w net.inet.tcp.delayed_ack=0
sudo sysctl -w net.inet.tcp.bg_target_qdelay=20
# ==========
# üåê Speed Functions
# ==========
speed2_set() {
  sudo sysctl -w net.inet.tcp.recvspace=262144
  sudo sysctl -w net.inet.tcp.sendspace=262144
}

speed1_reset() {
  sudo sysctl -w net.inet.tcp.recvspace=131072
  sudo sysctl -w net.inet.tcp.sendspace=131072
}

===========
üó°Ô∏è Shinobi2.1 Port Killer
===========
PORTS=(
  # ========================
  # üåê Universal ports
  # ========================
  80 443 3478 4379 4380

  # ========================
  # üéÆ GeForce NOW ports
  # ========================
  49003 49004 49005 49006

  # ========================
  # üéÆ Steam ports (explicit)
  # ========================
  27000 27001 27002 27003 27004 27005 27006 27007 27008 27009
  27010 27011 27012 27013 27014 27015 27016 27017 27018 27019
  27020 27021 27022 27023 27024 27025 27026 27027 27028 27029
  27030 27031 27032 27033 27034 27035 27036 27037 27038 27039
  27040 27041 27042 27043 27044 27045 27046 27047 27048 27049
  27050

  # ========================
  # üéÆ Additional Steam ports (outbound and game-specific)
  # ========================
  27051 27052 27053 27054 27055 27056 27057 27058 27059 27060
  27061 27062 27063 27064 27065 27066 27067 27068 27069 27070
  27071 27072 27073 27074 27075 27076 27077 27078 27079 27080
  27081 27082 27083 27084 27085 27086 27087 27088 27089 27090
  27091 27092 27093 27094 27095 27096 27097 27098 27099 27100

  # ========================
  # üéÆ Game-specific ports (e.g., CoD, others)
  # ========================
  1500 3005 3101 28960
)

ME=$(whoami)

while true; do
  for PORT in "${PORTS[@]}"; do
    # Check for IPv4 and IPv6 connections (UDP and TCP)
    LSOF_OUTPUT=$(lsof -nP -iUDP:$PORT -iTCP:$PORT -i6UDP:$PORT -i6TCP:$PORT | grep -v "$ME" | awk 'NR>1')
    
    if [ ! -z "$LSOF_OUTPUT" ]; then
      # Killing process directly without logging
      echo "$LSOF_OUTPUT" | awk '{print $2}' | sort | uniq | while read PID; do
        kill -9 "$PID"
      done
    fi
  done
  sleep 2
done
}

# ==========
# üßπ Shinobi 2.4 ‚Äì GFN Container Killer & Cache Cleaner
# ==========
shinobi2_4() {
  PROCESS_NAME="GeForceNOW"
  CONTAINER_NAME="GeForceNOWContainer"
  CLEAN_PATHS=(
    "$HOME/Library/Caches/GeForceNOW"
    "$HOME/Library/Logs/GeForceNOW"
    "$HOME/Library/Caches/NVIDIA"
    "$HOME/Library/Logs/NVIDIA"
    "$HOME/Library/Application Support/GeForceNOW/cef"
    "$HOME/Library/Application Support/NVIDIA/GeForceNOW/streaming-telemetry"
    "$HOME/Library/Application Support/NVIDIA/GeForceNOW/temp"
  )
  gfn_was_running=false
  while true; do
    gfn_running=$(pgrep -x "$PROCESS_NAME" > /dev/null && echo true || echo false)
    if [ "$gfn_running" = true ]; then
      if [ "$gfn_was_running" = false ]; then
        speed2_set
      fi
      pgrep -x "$CONTAINER_NAME" > /dev/null && pkill -x "$CONTAINER_NAME"
      gfn_was_running=true
      sleep 15
    else
      if [ "$gfn_was_running" = true ]; then
        for path in "${CLEAN_PATHS[@]}"; do
          [ -d "$path" ] && rm -rf "$path"/* 2>/dev/null
        done
        speed1_reset
      fi
      gfn_was_running=false
      sleep 60
    fi
  done
}

# ==========
# üëÅÔ∏è Watcheye ‚Äì Integrated Session Rate Limiter
# ==========
watcheye() {
  RATE_LIMIT_TABLE="gfn_udp_ports"
  DEFAULT_PORTS="80 443 3478 4379 4380 49003 49004 49005 49006 \
27000 27001 27002 27003 27004 27005 27006 27007 27008 27009 \
27010 27011 27012 27013 27014 27015 27016 27017 27018 27019 \
27020 27021 27022 27023 27024 27025 27026 27027 27028 27029 \
27030 27031 27032 27033 27034 27035 27036 27037 27038 27039 \
27040 27041 27042 27043 27044 27045 27046 27047 27048 27049 \
27050"

  apply_rate_limit() {
    pfconf="$HOME/.watcheye/pf_watcheye.conf"
    mkdir -p "$HOME/.watcheye"
    echo "table <$RATE_LIMIT_TABLE> persist { $DEFAULT_PORTS }" > "$pfconf"
    echo "pass in quick proto udp to any port <$RATE_LIMIT_TABLE> keep state (max-src-conn-rate 100/1, max-src-conn 200)" >> "$pfconf"
    sudo pfctl -a "watcheye" -f "$pfconf"
    sudo pfctl -e
  }

  remove_rate_limit() {
    sudo pfctl -a "watcheye" -F all
  }

  prev_pid=""
  while true; do
    pid=$(pgrep -f "GeForceNOWContainer")
    if [[ -n "$pid" && -z "$prev_pid" ]]; then
      apply_rate_limit
      prev_pid=$pid
    fi
    if [[ -z "$pid" && -n "$prev_pid" ]]; then
      remove_rate_limit
      prev_pid=""
    fi
    sleep 3
  done
}

# ==========
# ‚úàÔ∏è Airtouch ‚Äì Keep awdl0 Down
# ==========
airtouch() {
  while true; do
    if ifconfig awdl0 | grep -q 'status: active'; then
      sudo ifconfig awdl0 down
    fi
    sleep 60
  done
}

# ==========
# üöÄ Launch Modules
# ==========
nohup shinobi2_1 >/dev/null 2>&1 &
nohup shinobi2_4 >/dev/null 2>&1 &
nohup watcheye >/dev/null 2>&1 &
nohup airtouch >/dev/null 2>&1 &

# ==========
# üí§ End
# ==========
exit 0
